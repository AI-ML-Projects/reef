option java_package = "com.microsoft.tang.proto";
option java_outer_classname = "ClassHierarchyProto";
option java_generic_services = true;
option java_generate_equals_and_hash = true;

/*
  Node is the abstract base type for all the data encoded in a class hierarchy.
  It is represented as an (un)tagged union, so only one of the three optional
  fields can be non-null. 
 */
message Node {
  /*
    The short name of this node (e.g., a class name without the enclosing
    package, or a package name without the name of the enclosing package.
   */
  required string name = 1;
  /*
    For some languages it can be difficult to map from a list of nodes to
    the correct short name, so for now, the full name is (redundantly)
    encoded here.  In Java, the full name is a bunch of short names that
    have been concatenated with "." and/or "$".
   */
  required string full_name = 2;
  optional ClassNode class_node = 3;
  optional NamedParameterNode named_parameter_node = 4;
  optional PackageNode package_node = 5;
  repeated Node children = 6;
}

message ClassNode {
  required bool is_injection_candidate = 1;
  required bool is_external_constructor = 2;
  repeated ConstructorDef InjectableConstructors = 3;
  repeated ConstructorDef OtherConstructors = 4;
  repeated string impl_full_names = 5;
}

message NamedParameterNode {
  required string simple_arg_class_name = 1;
  required string full_arg_class_name = 2;
  optional string documentation = 3;
  optional string short_name = 4;
  // calling this "default_instance" breaks protoc.
  optional string instance_default = 5;
}

message PackageNode {
}

message ConstructorDef {
  required string full_class_name = 1;
  repeated ConstructorArg args = 2;
}
message ConstructorArg {
  required string full_arg_class_name = 1;
  optional string named_parameter_name = 2;
}